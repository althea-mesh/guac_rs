// command to render: mscgen -Tsvg -o simultaneous_opening.svg simultaneous_opening.msc
msc {
  hscale = "2";
  u,a,b,c;

  u=>a [label="registerCounterparty B"];
  b=>b [label="registerCounterparty A"];
  a box a [label="state New"];
  b box b [label="state New"];
  u=>a [label="fillChannel B, 10"];
  a=>b [label="proposeChannel A: 10, B: 0"];
  b box b [label="state OtherCreating A: 10, B: 0"];
  a<<b [label="newChannel A: 10, B: 0"];
  a box a [label="state Creating A: 10, B: 0"];
  a=>c [label="newChannel A: 10, B: 0"];



  b=>b [label="fillChannel A, 10"];
  a<=b [label="propose closeChannelFast"];
  a<=b [label="propose newChannel A: 10, B: 10"];
  a box a [label="state OtherCreating A: 10, B: 10"];
  a>>b [label="signature closeChannelFast"];
  a>>b [label="signature newChannel A: 10, B: 10"];
  b box b [label="state Creating A: 10, B: 10"];
  b=>c [ label="submit closeChannelFast"];
  b=>c [label="submit newChannel A: 10, B: 10"];



  ...  [ label = "After some polling..." ];
  b<<c [label="channelOpened event A: 10, B: 10"];
  a<=b [label="channelOpened notification"];
  a=>c [label="verify channelOpened"];
  a<<c [label="channelOpened success"];
  a box a [label="state Open"];
  a>>b [label="channelOpened success"];
  b box b [label="state Open"];
  ---  [ label = "Channel is ready to use" ];
}