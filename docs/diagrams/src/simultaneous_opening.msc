// command to render: mscgen -Tsvg -o simultaneous_opening.svg simultaneous_opening.msc
msc {
  hscale = "2";
  u,a,b,c;

  u=>a [label="registerCounterparty B"];
  b=>b [label="registerCounterparty A"];
  a box a [label="state New"];
  b box b [label="state New"];
  u=>a [label="fillChannel B, 10"];
  a=>b [label="proposeChannel A: 10, B: 0"];
  b box b [label="state OtherCreating A: 10, B: 0"];
  a<<b [label="signature on newChannel A: 10, B: 0"];
  a box a [label="state Creating A: 10, B: 0"];
  a=>c [label="newChannel A: 10, B: 0"];



  b-xb [label="fillChannel in OtherCreating state fails"];
  ...  [ label = "After some polling..." ];

  a<<c [label="channelOpened event"];
  a=>b [label="channelOpened notification"],
  b=>c [label="verify channelOpened"];
  b<<c [label="channelOpened success"];
  b box b [label="state Open"];
  a<=b [label="propose reDraw A: 10, B: 10"];
  a box a [label="state OtherCreating A: 10, B: 10"];

  a>>b [label="signature on reDraw A: 10, B: 10"];
  b box b [label="state Creating A: 10, B: 10"];

  b=>c [label="submit reDraw A: 10, B: 10"];



  ...  [ label = "After some polling..." ];
  b<<c [label="reDraw event A: 10, B: 10"];
  a<=b [label="reDraw notification"];
  a=>c [label="verify ReDraw"];
  a<<c [label="reDraw success"];
  a box a [label="state Open"];
  a>>b [label="reDraw success"];
  b box b [label="state Open"];
  ---  [ label = "Channel is ready to use" ];
}